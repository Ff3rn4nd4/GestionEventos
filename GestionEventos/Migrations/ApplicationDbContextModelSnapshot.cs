// <auto-generated />
using System;
using GestionEventos;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GestionEventos.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0-preview.3.23174.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GestionEventos.Entidades.Comentario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EventoId")
                        .HasColumnType("int");

                    b.Property<string>("Fecha")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Texto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EventoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Comentario");
                });

            modelBuilder.Entity("GestionEventos.Entidades.Evento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacidad")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fecha")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hora")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ubicacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Eventos");
                });

            modelBuilder.Entity("GestionEventos.Entidades.HistorialAsistencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Fecha")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HistorialAsistencia");
                });

            modelBuilder.Entity("GestionEventos.Entidades.Promocion", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Codigo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Descuento")
                        .HasColumnType("int");

                    b.Property<int>("EventoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EventoId");

                    b.ToTable("Promocion");
                });

            modelBuilder.Entity("GestionEventos.Entidades.RegistroAsistencia", b =>
                {
                    b.Property<int>("EventoId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.Property<string>("Fecha")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("EventoId", "UsuarioId", "Fecha");

                    b.HasIndex("UsuarioId");

                    b.ToTable("RegistroAsistencias");
                });

            modelBuilder.Entity("GestionEventos.Entidades.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Contrasenia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("GestionEventos.Entidades.UsuarioEventoFavorito", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EventoId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UsuarioEventoFavoritos");
                });

            modelBuilder.Entity("GestionEventos.Entidades.UsuarioHistorialAsistencia", b =>
                {
                    b.Property<int>("HistorialAsistenciaId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.Property<int?>("EventoId")
                        .HasColumnType("int");

                    b.HasKey("HistorialAsistenciaId", "UsuarioId");

                    b.HasIndex("EventoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("UsuarioHistorialAsistencia");
                });

            modelBuilder.Entity("GestionEventos.Entidades.Comentario", b =>
                {
                    b.HasOne("GestionEventos.Entidades.Evento", "Evento")
                        .WithMany("Comentarios")
                        .HasForeignKey("EventoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestionEventos.Entidades.Usuario", "Usuario")
                        .WithMany("Comentarios")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Evento");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("GestionEventos.Entidades.Promocion", b =>
                {
                    b.HasOne("GestionEventos.Entidades.Evento", "Evento")
                        .WithMany("Promociones")
                        .HasForeignKey("EventoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Evento");
                });

            modelBuilder.Entity("GestionEventos.Entidades.RegistroAsistencia", b =>
                {
                    b.HasOne("GestionEventos.Entidades.Evento", "Evento")
                        .WithMany("RegistroAsistencias")
                        .HasForeignKey("EventoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestionEventos.Entidades.Usuario", "Usuario")
                        .WithMany("RegistroAsistencias")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Evento");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("GestionEventos.Entidades.UsuarioHistorialAsistencia", b =>
                {
                    b.HasOne("GestionEventos.Entidades.Evento", null)
                        .WithMany("UsuarioHistorialAsistencias")
                        .HasForeignKey("EventoId");

                    b.HasOne("GestionEventos.Entidades.HistorialAsistencia", "HistorialAsistencia")
                        .WithMany("Usuario")
                        .HasForeignKey("HistorialAsistenciaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestionEventos.Entidades.Usuario", "Usuario")
                        .WithMany("HistorialAsistencia")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HistorialAsistencia");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("GestionEventos.Entidades.Evento", b =>
                {
                    b.Navigation("Comentarios");

                    b.Navigation("Promociones");

                    b.Navigation("RegistroAsistencias");

                    b.Navigation("UsuarioHistorialAsistencias");
                });

            modelBuilder.Entity("GestionEventos.Entidades.HistorialAsistencia", b =>
                {
                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("GestionEventos.Entidades.Usuario", b =>
                {
                    b.Navigation("Comentarios");

                    b.Navigation("HistorialAsistencia");

                    b.Navigation("RegistroAsistencias");
                });
#pragma warning restore 612, 618
        }
    }
}
